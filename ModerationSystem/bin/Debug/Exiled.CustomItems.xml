<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Exiled.CustomItems</name>
    </assembly>
    <members>
        <member name="T:Exiled.CustomItems.API.SpawnLocation">
            <summary>
            All of the valid spawn locations.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside012">
            <summary>
            The inside of 012's hallway door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside012Bottom">
            <summary>
            The inside of the locked door leaving to SCP-012's room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside012Locker">
            <summary>
            The inside of the locked 012 armory door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside049Armory">
            <summary>
            The inside of SCP-049's Armory room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside079Secondary">
            <summary>
            The inside of the inner SCP-079 door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside096">
            <summary>
            The inside of SCP-096's locked room behind his spawn.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside173Armory">
            <summary>
            The inside of the armory next to SCP-173's spawn.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside173Bottom">
            <summary>
            The inside of the door at the bottom of SCP-173's stairs.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside173Connector">
            <summary>
            On the side closest to SCP-173's spawn, on the top of the stairs.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideEscapePrimary">
            <summary>
            Inside the first Escape door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideEscapeSecondary">
            <summary>
            Inside the second Escape door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideIntercom">
            <summary>
            Just inside the Intercom door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideLczArmory">
            <summary>
            Inside the LCZ Armory.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideLczCafe">
            <summary>
            Inside the LCZ office room with computers.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideNukeArmory">
            <summary>
            Inside the Nuke armory.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideSurfaceNuke">
            <summary>
            Inside the surface nuke room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside079First">
            <summary>
            Inside the first SCP-079 gate.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside173Gate">
            <summary>
            Inside SCP-079's gate.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.Inside914">
            <summary>
            Just inside of SCP-914.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideGateA">
            <summary>
            Inside the Gate-A room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideGateB">
            <summary>
            Inside the Gate-B room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideGr18">
            <summary>
            Inside the GR-18 door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideHczArmory">
            <summary>
            Inside the T-Junction HCZ Armory.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideHid">
            <summary>
            Inside the Micro-HID room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideHidLeft">
            <summary>
            Just inside the left door next to Micro-HID room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideHidRight">
            <summary>
            Just inside the right door next to Micro-HID room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideLczWc">
            <summary>
            Just inside the LCZ WC door.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideServersBottom">
            <summary>
            Just inside the door at the bottom of the server's room.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.SpawnLocation.InsideLocker">
            <summary>
            Inside a random locker on the map.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs">
            <summary>
            Contains all informations of a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> before a <see cref="T:Exiled.API.Features.Player"/> changes roles.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.#ctor(InventorySystem.Items.ItemBase,Exiled.Events.EventArgs.ChangingRoleEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.Item"/></param>
            <param name="ev">The <see cref="T:Exiled.Events.EventArgs.ChangingRoleEventArgs"/> instance.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.#ctor(InventorySystem.Items.ItemBase,Exiled.API.Features.Player,RoleType,System.Boolean,CharacterClassManager.SpawnReason)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.Item"/></param>
            <param name="player"><inheritdoc cref="P:Exiled.Events.EventArgs.ChangingRoleEventArgs.Player"/></param>
            <param name="newRole"><inheritdoc cref="P:Exiled.Events.EventArgs.ChangingRoleEventArgs.NewRole"/></param>
            <param name="shouldPreservePosition"><inheritdoc cref="P:Exiled.Events.EventArgs.ChangingRoleEventArgs.Lite"/></param>
            <param name="reason"><inheritdoc cref="P:Exiled.Events.EventArgs.ChangingRoleEventArgs.Reason"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.Item">
            <summary>
            Gets the <see cref="P:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.Item"/> as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in the player's inventory.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs">
            <summary>
            Contains all information of a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> before a <see cref="T:Exiled.API.Features.Player"/> dies.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.#ctor(Exiled.API.Features.Items.Item,Exiled.Events.EventArgs.DyingEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.Item"/></param>
            <param name="ev">The <see cref="T:Exiled.Events.EventArgs.HandcuffingEventArgs"/> instance.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.#ctor(Exiled.API.Features.Items.Item,Exiled.API.Features.Player,Exiled.API.Features.Player,PlayerStats.HitInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.Item"/></param>
            <param name="killer"><inheritdoc cref="P:Exiled.Events.EventArgs.DyingEventArgs.Killer"/></param>
            <param name="target"><inheritdoc cref="P:Exiled.Events.EventArgs.DyingEventArgs.Target"/></param>
            <param name="hitInformation"><inheritdoc cref="P:Exiled.Events.EventArgs.DyingEventArgs.HitInformation"/></param>
            <param name="isAllowed"><inheritdoc cref="P:Exiled.Events.EventArgs.DyingEventArgs.IsAllowed"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.Item">
            <summary>
            Gets the item in the player's inventory.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs">
            <summary>
            Contains all information of a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> before a <see cref="T:Exiled.API.Features.Player"/> escapes.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.#ctor(Exiled.API.Features.Items.Item,Exiled.Events.EventArgs.EscapingEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.Item"/></param>
            <param name="ev">The <see cref="T:Exiled.Events.EventArgs.EscapingEventArgs"/> instance.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.#ctor(Exiled.API.Features.Items.Item,Exiled.API.Features.Player)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.Item"/></param>
            <param name="player"><inheritdoc cref="P:Exiled.Events.EventArgs.EscapingEventArgs.Player"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.Item">
            <summary>
            Gets the item in the player's inventory.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs">
            <summary>
            Contains all information of a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> before handcuffing a <see cref="T:Exiled.API.Features.Player"/>.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.#ctor(Exiled.API.Features.Items.Item,Exiled.Events.EventArgs.HandcuffingEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.Item"/></param>
            <param name="ev">The <see cref="T:Exiled.Events.EventArgs.HandcuffingEventArgs"/> instance.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.#ctor(Exiled.API.Features.Items.Item,Exiled.API.Features.Player,Exiled.API.Features.Player,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.Item"/></param>
            <param name="cuffer"><inheritdoc cref="P:Exiled.Events.EventArgs.HandcuffingEventArgs.Cuffer"/></param>
            <param name="target"><inheritdoc cref="P:Exiled.Events.EventArgs.HandcuffingEventArgs.Target"/></param>
            <param name="isAllowed"><inheritdoc cref="P:Exiled.Events.EventArgs.HandcuffingEventArgs.IsAllowed"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.Item">
            <summary>
            Gets the item in the player's inventory.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs">
            <summary>
            Contains all information of a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> before a <see cref="P:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.Item"/> gets upgraded.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.#ctor(InventorySystem.Items.Pickups.ItemPickupBase,UnityEngine.Vector3,Scp914.Scp914KnobSetting,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs"/> class.
            </summary>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.Item"/></param>
            <param name="newPos"><inheritdoc cref="P:Exiled.Events.EventArgs.UpgradingItemEventArgs.OutputPosition"/></param>
            <param name="knobSetting"><inheritdoc cref="P:Exiled.Events.EventArgs.UpgradingItemEventArgs.KnobSetting"/></param>
            <param name="isAllowed"><inheritdoc cref="P:Exiled.Events.EventArgs.UpgradingItemEventArgs.IsAllowed"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.Item">
            <summary>
            Gets the upgrading <see cref="P:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.Item"/> as a<see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs">
            <summary>
            Contains all information of a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> before a <see cref="T:Exiled.API.Features.Player"/>'s inventory item is upgraded.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.#ctor(Exiled.API.Features.Player,InventorySystem.Items.ItemBase,Scp914.Scp914KnobSetting,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs"/> class.
            </summary>
            <param name="player"><inheritdoc cref="T:Exiled.API.Features.Player"/></param>
            <param name="item"><inheritdoc cref="P:Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.Item"/></param>
            <param name="knobSetting"><inheritdoc cref="P:Exiled.Events.EventArgs.UpgradingItemEventArgs.KnobSetting"/></param>
            <param name="isAllowed"><inheritdoc cref="P:Exiled.Events.EventArgs.UpgradingItemEventArgs.IsAllowed"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.Item">
            <summary>
            Gets the upgrading <see cref="P:Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.Item"/> as a<see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.Extensions">
            <summary>
            A collection of API methods.
            </summary>
        </member>
        <member name="F:Exiled.CustomItems.API.Extensions.ReversedLocations">
            <summary>
            The names of spawn locations who's positions are on the opposite side of their door, and must be corrected.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Extensions.ResetInventory(Exiled.API.Features.Player,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Resets the player's inventory to the provided list of items and/or customitems names, clearing any items it already possess.
            </summary>
            <param name="player">The player to which items will be given.</param>
            <param name="newItems">The new items that have to be added to the inventory.</param>
            <param name="displayMessage">Indicates a value whether <see cref="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)"/> will be called when the player receives the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> or not.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Extensions.GetDoor(Exiled.CustomItems.API.SpawnLocation)">
            <summary>
            Tries to get the <see cref="T:UnityEngine.Transform"/> of the door used for a specific <see cref="T:Exiled.CustomItems.API.SpawnLocation"/>.
            </summary>
            <param name="location">The <see cref="T:Exiled.CustomItems.API.SpawnLocation"/> to check.</param>
            <returns>The <see cref="T:UnityEngine.Transform"/> used for that spawn location. Can be null.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Extensions.GetPosition(Exiled.CustomItems.API.SpawnLocation)">
            <summary>
            Tries to get the <see cref="T:UnityEngine.Vector3"/> used for a specific <see cref="T:Exiled.CustomItems.API.SpawnLocation"/>.
            </summary>
            <param name="location">The <see cref="T:Exiled.CustomItems.API.SpawnLocation"/> to check.</param>
            <returns>The <see cref="T:UnityEngine.Vector3"/> used for that spawn location. Can be <see cref="P:UnityEngine.Vector3.zero"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Extensions.Register(System.Collections.Generic.IEnumerable{Exiled.CustomItems.API.Features.CustomItem})">
            <summary>
            Registers an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>s.
            </summary>
            <param name="customItems"><see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>s to be registered.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Extensions.Unregister(System.Collections.Generic.IEnumerable{Exiled.CustomItems.API.Features.CustomItem})">
            <summary>
            Unregisters an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>s.
            </summary>
            <param name="customItems"><see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>s to be unregistered.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Extensions.GetDoorName(Exiled.CustomItems.API.SpawnLocation)">
            <summary>
            The names of the doors attached to each spawn location.
            </summary>
            <param name="spawnLocation">The <see cref="T:Exiled.CustomItems.API.SpawnLocation"/>.</param>
            <returns>Returns the door name.</returns>
        </member>
        <member name="T:Exiled.CustomItems.API.Features.CustomGrenade">
            <inheritdoc />
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomGrenade.Type">
            <summary>
            Gets or sets the <see cref="T:ItemType"/> to use for this item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomGrenade.ExplodeOnCollision">
            <summary>
            Gets or sets a value indicating whether gets or sets a value that determines if the grenade should explode immediately when contacting any surface.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomGrenade.FuseTime">
            <summary>
            Gets or sets a value indicating how long the grenade's fuse time should be.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomGrenade.Tracked">
            <summary>
            Gets a value indicating what thrown grenades are currently being tracked.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.Throw(UnityEngine.Vector3,System.Single,System.Single,ItemType,Exiled.API.Features.Player)">
            <summary>
            Spawns a live grenade object on the map.
            </summary>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> to spawn the grenade at.</param>
            <param name="force">The amount of force to throw with.</param>
            <param name="fuseTime">The <see cref="T:System.Single"/> fuse time of the grenade.</param>
            <param name="grenadeType">The <see cref="T:Exiled.API.Enums.GrenadeType"/> of the grenade to spawn.</param>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to count as the thrower of the grenade.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> being spawned.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.SubscribeEvents">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.UnsubscribeEvents">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.OnThrowing(Exiled.Events.EventArgs.ThrowingItemEventArgs)">
            <summary>
            Handles tracking thrown custom grenades.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ThrowingItemEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.OnExploding(Exiled.Events.EventArgs.ExplodingGrenadeEventArgs)">
            <summary>
            Handles tracking exploded custom grenades.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ExplodingGrenadeEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.OnChangingIntoGrenade(Exiled.Events.EventArgs.ChangingIntoGrenadeEventArgs)">
            <summary>
            Handles the tracking of custom grenade pickups that are changed into live grenades by a frag grenade explosion.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ChangingIntoGrenadeEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.OnWaitingForPlayers">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomGrenade.Check(InventorySystem.Items.ThrowableProjectiles.ThrownProjectile)">
            <summary>
            Checks to see if the grenade is a tracked custom grenade.
            </summary>
            <param name="grenade">The <see cref="T:UnityEngine.GameObject"/> of the grenade to check.</param>
            <returns>True if it is a custom grenade.</returns>
        </member>
        <member name="T:Exiled.CustomItems.API.Features.CustomItem">
            <summary>
            The Custom Item base class.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.Registered">
            <summary>
            Gets the list of current Item Managers.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.Id">
            <summary>
            Gets or sets the custom ItemID of the item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.Name">
            <summary>
            Gets or sets the name of the item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.Description">
            <summary>
            Gets or sets the description of the item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.Weight">
            <summary>
            Gets or sets the weight of the item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.SpawnProperties">
            <summary>
            Gets or sets the list of spawn locations and chances for each one.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.Type">
            <summary>
            Gets or sets the ItemType to use for this item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.TrackedSerials">
            <summary>
            Gets the list of custom items inside players' inventory being tracked as the current item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomItem.ShouldMessageOnGban">
            <summary>
            Gets a value indicating whether whether or not this item causes things to happen that may be considered hacks, and thus be shown to global moderators as being present in a player's inventory when they gban them.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Get(System.Int32)">
            <summary>
            Gets a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> with a specific ID.
            </summary>
            <param name="id">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> ID.</param>
            <returns>The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> matching the search, null if not registered.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Get(System.String)">
            <summary>
            Gets a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> with a specific name.
            </summary>
            <param name="name">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> name.</param>
            <returns>The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> matching the search, null if not registered.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGet(System.Int32,Exiled.CustomItems.API.Features.CustomItem@)">
            <summary>
            Tries to get a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> with a specific ID.
            </summary>
            <param name="id">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> ID to look for.</param>
            <param name="customItem">The found <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>, null if not registered.</param>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> was found or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGet(System.String,Exiled.CustomItems.API.Features.CustomItem@)">
            <summary>
            Tries to get a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> with a specific name.
            </summary>
            <param name="name">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> name to look for.</param>
            <param name="customItem">The found <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>, null if not registered.</param>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> was found or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGet(Exiled.API.Features.Player,Exiled.CustomItems.API.Features.CustomItem@)">
            <summary>
            Tries to get the player's current <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in their hand.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to check.</param>
            <param name="customItem">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in their hand.</param>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.API.Features.Player"/> has a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in their hand or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGet(Exiled.API.Features.Player,System.Collections.Generic.IEnumerable{Exiled.CustomItems.API.Features.CustomItem}@)">
            <summary>
            Tries to get the player's <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to check.</param>
            <param name="customItems">The player's <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</param>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.API.Features.Player"/> has a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in their hand or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGet(Exiled.API.Features.Items.Item,Exiled.CustomItems.API.Features.CustomItem@)">
            <summary>
            Checks to see if this item is a custom item.
            </summary>
            <param name="item">The <see cref="T:Exiled.Events.Handlers.Item"/> to check.</param>
            <param name="customItem">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> this item is.</param>
            <returns>True if the item is a custom item.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGet(Exiled.API.Features.Items.Pickup,Exiled.CustomItems.API.Features.CustomItem@)">
            <summary>
            Checks if this pickup is a custom item.
            </summary>
            <param name="pickup">The <see cref="T:InventorySystem.Items.Pickups.ItemPickupBase"/> to check.</param>
            <param name="customItem">The <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> this pickup is.</param>
            <returns>True if the pickup is a custom item.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TrySpawn(System.Int32,UnityEngine.Vector3,Exiled.API.Features.Items.Pickup@)">
            <summary>
            Tries to spawn a specific <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> at a specific <see cref="T:UnityEngine.Vector3"/> position.
            </summary>
            <param name="id">The ID of the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to spawn.</param>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> location to spawn the item.</param>
            <param name="pickup">The <see cref="T:InventorySystem.Items.Pickups.ItemPickupBase"/> instance of the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</param>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> was spawned or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TrySpawn(System.String,UnityEngine.Vector3,Exiled.API.Features.Items.Pickup@)">
            <summary>
            Tries to spawn a specific <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> at a specific <see cref="T:UnityEngine.Vector3"/> position.
            </summary>
            <param name="name">The name of the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to spawn.</param>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> location to spawn the item.</param>
            <param name="pickup">The <see cref="T:InventorySystem.Items.Pickups.ItemPickupBase"/> instance of the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</param>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> was spawned or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGive(Exiled.API.Features.Player,System.String,System.Boolean)">
            <summary>
            Gives to a specific <see cref="T:Exiled.API.Features.Player"/> a specic <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to give the item to.</param>
            <param name="name">The name of the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to give.</param>
            <param name="displayMessage">Indicates a value whether <see cref="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)"/> will be called when the player receives the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> or not.</param>
            <returns>Returns a value indicating if the player was given the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryGive(Exiled.API.Features.Player,System.Int32,System.Boolean)">
            <summary>
            Gives to a specific <see cref="T:Exiled.API.Features.Player"/> a specic <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to give the item to.</param>
            <param name="id">The IDs of the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to give.</param>
            <param name="displayMessage">Indicates a value whether <see cref="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)"/> will be called when the player receives the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> or not.</param>
            <returns>Returns a value indicating if the player was given the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryRegister">
            <summary>
            Registers a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> was registered or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.TryUnregister">
            <summary>
            Tries to unregister a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
            <returns>Returns a value indicating whether the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> was unregistered or not.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(System.Single,System.Single,System.Single)">
            <summary>
            Spawns the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in a specific location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> wrapper of the spawned <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(System.Single,System.Single,System.Single,Exiled.API.Features.Items.Item)">
            <summary>
            Spawns a <see cref="T:Exiled.API.Features.Items.Item"/> as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in a specific location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="item">The <see cref="T:Exiled.API.Features.Items.Item"/> to be spawned as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> wrapper of the spawned <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(Exiled.API.Features.Player)">
            <summary>
            Spawns the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> where a specific <see cref="T:Exiled.API.Features.Player"/> is.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> position where the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> will be spawned.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> wrapper of the spawned <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(Exiled.API.Features.Player,Exiled.API.Features.Items.Item)">
            <summary>
            Spawns a <see cref="T:Exiled.API.Features.Items.Item"/> as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> where a specific <see cref="T:Exiled.API.Features.Player"/> is.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> position where the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> will be spawned.</param>
            <param name="item">The <see cref="T:Exiled.API.Features.Items.Item"/> to be spawned as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> wrapper of the spawned <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(UnityEngine.Vector3)">
            <summary>
            Spawns the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in a specific position.
            </summary>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> where the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> will be spawned.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> wrapper of the spawned <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(UnityEngine.Vector3,Exiled.API.Features.Items.Item)">
            <summary>
            Spawns a <see cref="T:Exiled.API.Features.Items.Item"/> as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> in a specific position.
            </summary>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> where the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> will be spawned.</param>
            <param name="item">The <see cref="T:Exiled.API.Features.Items.Item"/> to be spawned as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</param>
            <returns>The <see cref="T:Exiled.API.Features.Items.Pickup"/> wrapper of the spawned <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Spawn(System.Collections.Generic.IEnumerable{Exiled.CustomItems.API.Spawn.SpawnPoint},System.UInt32)">
            <summary>
            Spawns <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>s inside <paramref name="spawnPoints"/>.
            </summary>
            <param name="spawnPoints">The spawn points <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <param name="limit">The spawn limit.</param>
            <returns>Returns the number of spawned items.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.SpawnAll">
            <summary>
            Spawns all items at their dynamic and static positions.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Give(Exiled.API.Features.Player,Exiled.API.Features.Items.Item,System.Boolean)">
            <summary>
            Gives an <see cref="T:Exiled.API.Features.Items.Item"/> as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to a <see cref="T:Exiled.API.Features.Player"/>.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will receive the item.</param>
            <param name="item">The <see cref="T:Exiled.API.Features.Items.Item"/> to be given.</param>
            <param name="displayMessage">Indicates whether or not <see cref="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)"/> will be called when the player receives the item.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Give(Exiled.API.Features.Player,Exiled.API.Features.Items.Pickup,System.Boolean)">
            <summary>
            Gives a <see cref="T:InventorySystem.Items.Pickups.ItemPickupBase"/> as a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to a <see cref="T:Exiled.API.Features.Player"/>.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will receive the item.</param>
            <param name="pickup">The <see cref="T:InventorySystem.Items.Pickups.ItemPickupBase"/> to be given.</param>
            <param name="displayMessage">Indicates whether or not <see cref="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)"/> will be called when the player receives the item.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Give(Exiled.API.Features.Player,System.Boolean)">
            <summary>
            Gives the <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/> to a player.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will receive the item.</param>
            <param name="displayMessage">Indicates whether or not <see cref="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)"/> will be called when the player receives the item.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Init">
            <summary>
            Called when the item is registered.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Destroy">
            <summary>
            Called when the item is unregistered.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Check(Exiled.API.Features.Items.Pickup)">
            <summary>
            Checks the specified pickup to see if it is a custom item.
            </summary>
            <param name="pickup">The <see cref="T:Exiled.API.Features.Items.Pickup"/> to check.</param>
            <returns>True if it is a custom item.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.Check(Exiled.API.Features.Items.Item)">
            <summary>
            Checks the specified inventory item to see if it is a custom item.
            </summary>
            <param name="item">The <see cref="T:Exiled.API.Features.Items.Item"/> to check.</param>
            <returns>True if it is a custom item.</returns>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.SubscribeEvents">
            <summary>
            Called after the manager is initialized, to allow loading of special event handlers.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.UnsubscribeEvents">
            <summary>
            Called when the manager is being destroyed, to allow unloading of special event handlers.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnOwnerChangingRole(Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs)">
            <summary>
            Handles tracking items when they a player changes their role.
            </summary>
            <param name="ev"><see cref="T:Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnOwnerDying(Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs)">
            <summary>
            Handles making sure custom items are not "lost" when a player dies.
            </summary>
            <param name="ev"><see cref="T:Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnOwnerEscaping(Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs)">
            <summary>
            Handles making sure custom items are not "lost" when a player escapes.
            </summary>
            <param name="ev"><see cref="T:Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnOwnerHandcuffing(Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs)">
            <summary>
            Handles making sure custom items are not "lost" when being handcuffed.
            </summary>
            <param name="ev"><see cref="T:Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnDropping(Exiled.Events.EventArgs.DroppingItemEventArgs)">
            <summary>
            Handles tracking items when they are dropped by a player.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.DroppingItemEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnPickingUp(Exiled.Events.EventArgs.PickingUpItemEventArgs)">
            <summary>
            Handles tracking items when they are picked up by a player.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.PickingUpItemEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnChanging(Exiled.Events.EventArgs.ChangingItemEventArgs)">
            <summary>
            Handles tracking items when they are selected in the player's inventory.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ChangingItemEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnUpgrading(Exiled.CustomItems.API.EventArgs.UpgradingEventArgs)">
            <summary>
            Handles making sure custom items are not affected by SCP-914.
            </summary>
            <param name="ev"><see cref="T:Exiled.CustomItems.API.EventArgs.UpgradingEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnUpgrading(Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs)">
            <inheritdoc cref="M:Exiled.CustomItems.API.Features.CustomItem.OnUpgrading(Exiled.CustomItems.API.EventArgs.UpgradingEventArgs)"/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.OnWaitingForPlayers">
            <summary>
            Clears the lists of item uniqIDs and Pickups since any still in the list will be invalid.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.ShowPickedUpMessage(Exiled.API.Features.Player)">
            <summary>
            Shows a message to the player when he pickups a custom item.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will be shown the message.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomItem.ShowSelectedMessage(Exiled.API.Features.Player)">
            <summary>
            Shows a message to the player when he selects a custom item.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will be shown the message.</param>
        </member>
        <member name="T:Exiled.CustomItems.API.Features.CustomWeapon">
            <inheritdoc />
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomWeapon.Modifiers">
            <summary>
            Gets or sets the weapon modifiers.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomWeapon.Type">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomWeapon.Damage">
            <summary>
            Gets or sets the weapon damage.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.CustomWeapon.ClipSize">
            <summary>
            Gets or sets a value indicating how big of a clip the weapon will have.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.Spawn(UnityEngine.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.Spawn(UnityEngine.Vector3,Exiled.API.Features.Items.Item)">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.Give(Exiled.API.Features.Player,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.SubscribeEvents">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.UnsubscribeEvents">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.OnReloading(Exiled.Events.EventArgs.ReloadingWeaponEventArgs)">
            <summary>
            Handles reloading for custom weapons.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ReloadingWeaponEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.OnShooting(Exiled.Events.EventArgs.ShootingEventArgs)">
            <summary>
            Handles shooting for custom weapons.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ShootingEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.OnShot(Exiled.Events.EventArgs.ShotEventArgs)">
            <summary>
            Handles shot for custom weapons.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ShotEventArgs"/>.</param>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.CustomWeapon.OnHurting(Exiled.Events.EventArgs.HurtingEventArgs)">
            <summary>
            Handles hurting for custom weapons.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.HurtingEventArgs"/>.</param>
        </member>
        <member name="T:Exiled.CustomItems.API.Features.Modifiers">
            <summary>
            Weapon modifiers.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.API.Features.Modifiers.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.API.Features.Modifiers"/> struct.
            </summary>
            <param name="barrelType"><inheritdoc cref="P:Exiled.CustomItems.API.Features.Modifiers.BarrelType"/></param>
            <param name="sightType"><inheritdoc cref="P:Exiled.CustomItems.API.Features.Modifiers.SightType"/></param>
            <param name="otherType"><inheritdoc cref="P:Exiled.CustomItems.API.Features.Modifiers.OtherType"/></param>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.Modifiers.BarrelType">
            <summary>
            Gets a value indicating what <see cref="P:Exiled.CustomItems.API.Features.Modifiers.BarrelType"/> the weapon will have.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.Modifiers.SightType">
            <summary>
            Gets a value indicating what <see cref="P:Exiled.CustomItems.API.Features.Modifiers.SightType"/> the weapon will have.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Features.Modifiers.OtherType">
            <summary>
            Gets a value indicating what <see cref="P:Exiled.CustomItems.API.Features.Modifiers.OtherType"/> the weapon will have.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.Spawn.DynamicSpawnPoint">
            <summary>
            Handles dynamic spawn locations.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.DynamicSpawnPoint.Location">
            <summary>
            Gets or sets the <see cref="T:Exiled.CustomItems.API.SpawnLocation"/> for this item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.DynamicSpawnPoint.Chance">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.DynamicSpawnPoint.Name">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.DynamicSpawnPoint.Position">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.API.Spawn.SpawnPoint">
            <summary>
            Defines item spawn properties.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.SpawnPoint.Name">
            <summary>
            Gets or sets this spawn point name.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.SpawnPoint.Chance">
            <summary>
            Gets or sets the spawn chance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.SpawnPoint.Position">
            <summary>
            Gets or sets this spawn point position.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.Spawn.SpawnProperties">
            <summary>
            Handles special properties of spawning an item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.SpawnProperties.Limit">
            <summary>
            Gets or sets a value indicating how many of the item can be spawned when the round starts.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.SpawnProperties.DynamicSpawnPoints">
            <summary>
            Gets or sets a <see cref="T:System.Collections.Generic.List`1"/> of possible dynamic spawn points.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.SpawnProperties.StaticSpawnPoints">
            <summary>
            Gets or sets a <see cref="T:System.Collections.Generic.List`1"/> of possible static spawn points.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.API.Spawn.StaticSpawnPoint">
            <summary>
            Handles static spawn locations.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.StaticSpawnPoint.Name">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.StaticSpawnPoint.Chance">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.API.Spawn.StaticSpawnPoint.Position">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Commands.Give">
            <summary>
            The command to give a player an item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Give.Instance">
            <summary>
            Gets the <see cref="T:Exiled.CustomItems.Commands.Give"/> instance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Give.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Give.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Give.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Give.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Give.CheckEligible(Exiled.API.Features.Player)">
            <summary>
            Checks if the player is eligible to receive custom items.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.Commands.Info">
            <summary>
            The command to view info about a specific item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Info.Instance">
            <summary>
            Gets the <see cref="T:Exiled.CustomItems.Commands.Info"/> instance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Info.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Info.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Info.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Info.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Commands.List.List">
            <summary>
            The command to list all installed items.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.List.Instance">
            <summary>
            Gets the <see cref="T:Exiled.CustomItems.Commands.Info"/> instance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.List.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.List.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.List.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.List.List.LoadGeneratedCommands">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.List.List.ExecuteParent(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Commands.List.Registered">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Registered.Instance">
            <summary>
            Gets the command instance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Registered.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Registered.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Registered.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.List.Registered.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Commands.List.Tracked">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Tracked.Instance">
            <summary>
            Gets the command instance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Tracked.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Tracked.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.List.Tracked.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.List.Tracked.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Commands.Main">
            <summary>
            The main command.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Main.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.CustomItems.Commands.Main"/> class.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Main.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Main.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Main.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Main.LoadGeneratedCommands">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Main.ExecuteParent(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Commands.Spawn">
            <summary>
            The command to spawn a specific item.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Spawn.Instance">
            <summary>
            Gets the <see cref="T:Exiled.CustomItems.Commands.Info"/> instance.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Spawn.Command">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Spawn.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Commands.Spawn.Description">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.CustomItems.Commands.Spawn.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.CustomItems.Config">
            <summary>
            The plugin's config class.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Config.IsEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.CustomItems.Config.PickedUpHint">
            <summary>
            Gets the hint that is shown when someone pickups a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Config.SelectedHint">
            <summary>
            Gets the hint that is shown when someone pickups a <see cref="T:Exiled.CustomItems.API.Features.CustomItem"/>.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.Config.Debug">
            <summary>
            Gets a value indicating whether if debug mode is enabled.
            </summary>
        </member>
        <member name="T:Exiled.CustomItems.CustomItems">
            <summary>
            Handles all CustomItem API.
            </summary>
        </member>
        <member name="P:Exiled.CustomItems.CustomItems.Instance">
            <summary>
            Gets the static reference to this <see cref="T:Exiled.CustomItems.CustomItems"/> class.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.CustomItems.OnEnabled">
            <inheritdoc />
        </member>
        <member name="M:Exiled.CustomItems.CustomItems.OnDisabled">
            <inheritdoc />
        </member>
        <member name="T:Exiled.CustomItems.PlayerHandler">
            <summary>
            Handles Player events for the CustomItem API.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.PlayerHandler.OnChangingRole(Exiled.Events.EventArgs.ChangingRoleEventArgs)">
            <inheritdoc cref="T:Exiled.Events.EventArgs.ChangingRoleEventArgs"/>
        </member>
        <member name="T:Exiled.CustomItems.RoundHandler">
            <summary>
            Event Handlers for the CustomItem API.
            </summary>
        </member>
        <member name="M:Exiled.CustomItems.RoundHandler.OnRoundStarted">
            <inheritdoc cref="M:Exiled.Events.Handlers.Server.OnRoundStarted"/>
        </member>
    </members>
</doc>
